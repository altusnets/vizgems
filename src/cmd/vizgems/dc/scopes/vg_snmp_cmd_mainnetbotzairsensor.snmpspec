rec=(
    keys='SID SNAME EID ENAME PID PNAME'
    walk0=(
        name='.1.3.6.1.4.1.5528.100.4.1.5.1.1.${SID}' # airFlowSensorId
        type=STRING
        value='${SNAME}'
    )
    walk1=(
        name='.1.3.6.1.4.1.5528.100.4.1.5.1.4.${SID}' # airFlowSensorLabel
        type=STRING
        value='${SLABEL}'
    )
    walk2=(
        name='.1.3.6.1.4.1.5528.100.4.1.5.1.8.${SID}' # airFlowSensorValueInt
        type=INTEGER
        value='${SVALUE}'
    )
    walk3=(
        name='.1.3.6.1.4.1.5528.100.4.1.5.1.5.${SID}' # airFlowSensorEncId
        type=STRING
        value='${ENAME}'
    )
    walk4=(
        name='.1.3.6.1.4.1.5528.100.4.1.5.1.6.${SID}' # airFlowSensorPortId
        type=STRING
        value='${PNAME}'
        varappend='[[ $PNAME == "" ]] && PNAME=NONE$RANDOM'
    )
    walk5=(
        name='.1.3.6.1.4.1.5528.100.2.1.1.1.${EID}' # enclosureId
        type=STRING
        value='${ENAME}'
    )
    walk6=(
        name='.1.3.6.1.4.1.5528.100.2.1.1.4.${EID}' # enclosureLabel
        type=STRING
        value='${ELABEL}'
    )
    walk7=(
        name='.1.3.6.1.4.1.5528.100.3.1.1.1.${PID}' # dinPortId
        type=STRING
        value='${PNAME}'
    )
    walk8=(
        name='.1.3.6.1.4.1.5528.100.3.1.1.3.${PID}' # dinPortLabel
        type=STRING
        value='${PLABEL}'
    )
    outkey=SID
    output='${SID}|${SNAME}|${SVALUE}|${SLABEL}|${ELABEL}|${PLABEL}'
    outfilter='{
        IFS="|"
        case $INVMODE in
        y)
            while read -r sid sname svalue slabel elabel plabel; do
                sname=${sname//\"/}
                slabel=${slabel//\"/}
                elabel=${elabel//\"/}
                plabel=${plabel//\"/}
                if [[ $plabel != "" ]] then
                    label=$plabel
                elif [[ $elabel != "" ]] then
                    label=$elabel
                    if [[ $sname == *[0-9] && $elabel == *0 ]] then
                        label=${elabel%?}${sname: -1:1}
                    fi
                else
                    label=$sname
                fi
                if [[ $label == @(*" "*|Camera) ]] then
                    label=${label##+([ 	])}
                    typeset -l l=${label:0:1}
                    label=$INV_TARGET$l
                fi
                print "node|o|$INV_TARGET|si_airid$sid|$sid"
                print "node|o|$INV_TARGET|si_airlabel$sid|$label"
                print "node|r|$label|name|$label"
                print "node|r|$label|nodename|$label"
                print "map|r|$label|o|$INV_TARGET||"
                print "edge|r|$label|r|$label|mode|virtual"
                print -u3 "ifs[$sid]=1"
            done 3> netbotzairsensor.list.new
            mv netbotzairsensor.list.new netbotzairsensor.list
            ;;
        *)
            typeset -A ifs
            typeset -i fvalue
            [[ -f ./netbotzairsensor.list ]] && . ./netbotzairsensor.list
            in=0
            while read -r sid sname svalue slabel elabel plabel; do
                sname=${sname//\"/}
                slabel=${slabel//\"/}
                elabel=${elabel//\"/}
                plabel=${plabel//\"/}
                if [[ $plabel != "" ]] then
                    label=$plabel
                elif [[ $elabel != "" ]] then
                    label=$elabel
                    if [[ $sname == *[0-9] && $elabel == *0 ]] then
                        label=${elabel%?}${sname: -1:1}
                    fi
                else
                    label=$sname
                fi
                if [[ $label == @(*" "*|Camera) ]] then
                    label=${label##+([ 	])}
                    typeset -l l=${label:0:1}
                    label=$VG_TARGETNAME$l
                fi
                if (( ifs[$sid] < 1 )) then
                    touch -d "14 day ago" inv.out
                fi
                ifs[$sid]=3
                (( in++ ))
                (( fvalue = svalue * 3.2808 ))
                print "rt=STAT alvids=\"r:$label\" name=\"sensor_air.${sid}\" type=number num=$fvalue unit=fpm label=\"$slabel ($label)\""
            done
            for sid in "${!ifs[@]}"; do
                if (( in > 0 && ifs[$sid] != 3 )) then
                    touch -d "14 day ago" inv.out
                fi
            done
            ;;
        esac
    }'
)
